/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TransaccionesRouteImport } from './routes/transacciones'
import { Route as PresupuestosRouteImport } from './routes/presupuestos'
import { Route as NuevaTransaccionRouteImport } from './routes/nuevaTransaccion'
import { Route as MetasRouteImport } from './routes/metas'
import { Route as ConfiguracionRouteImport } from './routes/configuracion'
import { Route as AutenticacionRouteImport } from './routes/autenticacion'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EditarTransaccionTransactionIdRouteImport } from './routes/editarTransaccion.$transactionId'

const TransaccionesRoute = TransaccionesRouteImport.update({
  id: '/transacciones',
  path: '/transacciones',
  getParentRoute: () => rootRouteImport,
} as any)
const PresupuestosRoute = PresupuestosRouteImport.update({
  id: '/presupuestos',
  path: '/presupuestos',
  getParentRoute: () => rootRouteImport,
} as any)
const NuevaTransaccionRoute = NuevaTransaccionRouteImport.update({
  id: '/nuevaTransaccion',
  path: '/nuevaTransaccion',
  getParentRoute: () => rootRouteImport,
} as any)
const MetasRoute = MetasRouteImport.update({
  id: '/metas',
  path: '/metas',
  getParentRoute: () => rootRouteImport,
} as any)
const ConfiguracionRoute = ConfiguracionRouteImport.update({
  id: '/configuracion',
  path: '/configuracion',
  getParentRoute: () => rootRouteImport,
} as any)
const AutenticacionRoute = AutenticacionRouteImport.update({
  id: '/autenticacion',
  path: '/autenticacion',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EditarTransaccionTransactionIdRoute =
  EditarTransaccionTransactionIdRouteImport.update({
    id: '/editarTransaccion/$transactionId',
    path: '/editarTransaccion/$transactionId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/autenticacion': typeof AutenticacionRoute
  '/configuracion': typeof ConfiguracionRoute
  '/metas': typeof MetasRoute
  '/nuevaTransaccion': typeof NuevaTransaccionRoute
  '/presupuestos': typeof PresupuestosRoute
  '/transacciones': typeof TransaccionesRoute
  '/editarTransaccion/$transactionId': typeof EditarTransaccionTransactionIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/autenticacion': typeof AutenticacionRoute
  '/configuracion': typeof ConfiguracionRoute
  '/metas': typeof MetasRoute
  '/nuevaTransaccion': typeof NuevaTransaccionRoute
  '/presupuestos': typeof PresupuestosRoute
  '/transacciones': typeof TransaccionesRoute
  '/editarTransaccion/$transactionId': typeof EditarTransaccionTransactionIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/autenticacion': typeof AutenticacionRoute
  '/configuracion': typeof ConfiguracionRoute
  '/metas': typeof MetasRoute
  '/nuevaTransaccion': typeof NuevaTransaccionRoute
  '/presupuestos': typeof PresupuestosRoute
  '/transacciones': typeof TransaccionesRoute
  '/editarTransaccion/$transactionId': typeof EditarTransaccionTransactionIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/autenticacion'
    | '/configuracion'
    | '/metas'
    | '/nuevaTransaccion'
    | '/presupuestos'
    | '/transacciones'
    | '/editarTransaccion/$transactionId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/autenticacion'
    | '/configuracion'
    | '/metas'
    | '/nuevaTransaccion'
    | '/presupuestos'
    | '/transacciones'
    | '/editarTransaccion/$transactionId'
  id:
    | '__root__'
    | '/'
    | '/autenticacion'
    | '/configuracion'
    | '/metas'
    | '/nuevaTransaccion'
    | '/presupuestos'
    | '/transacciones'
    | '/editarTransaccion/$transactionId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AutenticacionRoute: typeof AutenticacionRoute
  ConfiguracionRoute: typeof ConfiguracionRoute
  MetasRoute: typeof MetasRoute
  NuevaTransaccionRoute: typeof NuevaTransaccionRoute
  PresupuestosRoute: typeof PresupuestosRoute
  TransaccionesRoute: typeof TransaccionesRoute
  EditarTransaccionTransactionIdRoute: typeof EditarTransaccionTransactionIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/transacciones': {
      id: '/transacciones'
      path: '/transacciones'
      fullPath: '/transacciones'
      preLoaderRoute: typeof TransaccionesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/presupuestos': {
      id: '/presupuestos'
      path: '/presupuestos'
      fullPath: '/presupuestos'
      preLoaderRoute: typeof PresupuestosRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/nuevaTransaccion': {
      id: '/nuevaTransaccion'
      path: '/nuevaTransaccion'
      fullPath: '/nuevaTransaccion'
      preLoaderRoute: typeof NuevaTransaccionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/metas': {
      id: '/metas'
      path: '/metas'
      fullPath: '/metas'
      preLoaderRoute: typeof MetasRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/configuracion': {
      id: '/configuracion'
      path: '/configuracion'
      fullPath: '/configuracion'
      preLoaderRoute: typeof ConfiguracionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/autenticacion': {
      id: '/autenticacion'
      path: '/autenticacion'
      fullPath: '/autenticacion'
      preLoaderRoute: typeof AutenticacionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/editarTransaccion/$transactionId': {
      id: '/editarTransaccion/$transactionId'
      path: '/editarTransaccion/$transactionId'
      fullPath: '/editarTransaccion/$transactionId'
      preLoaderRoute: typeof EditarTransaccionTransactionIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AutenticacionRoute: AutenticacionRoute,
  ConfiguracionRoute: ConfiguracionRoute,
  MetasRoute: MetasRoute,
  NuevaTransaccionRoute: NuevaTransaccionRoute,
  PresupuestosRoute: PresupuestosRoute,
  TransaccionesRoute: TransaccionesRoute,
  EditarTransaccionTransactionIdRoute: EditarTransaccionTransactionIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
